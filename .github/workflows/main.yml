# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

        
      - name: Install required packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ca-certificates curl gnupg pkg-config make cmake binutils libstdc++-9-dev
          curl --silent 'https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB' | apt-key add -
          echo 'deb https://apt.repos.intel.com/oneapi all main' >>/etc/apt/sources.list.d/intel.list
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends intel-oneapi-compiler-dpcpp-cpp intel-oneapi-mkl-devel
          sudo apt-get clean
          rm -rf /var/lib/apt/lists/*

      - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

          
          
      - name: Build
      # Build your program with the given configuration
        run: | 
          source /opt/intel/oneapi/setvars.sh
          sed -e 's,^\(prefix\)=.*$,\1=/opt/intel/oneapi/mkl/latest,' -e 's,MKLROOT,prefix,g' -e 's,^Cflags:.*$,& -I"${prefix}/include/fftw",' -i /opt/intel/oneapi/mkl/latest/tools/pkgconfig/mkl-dynamic-lp64-iomp.pc
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Create Baseline
        run: make --directory=./cmake-build-release/ LBL_Test


